import nmap
from docx import Document

def scan_ports(host, port_range):
    open_ports = []
    nm = nmap.PortScanner()
    ports = ','.join(str(p) for p in range(*port_range))
    nm.scan(hosts=host, ports=ports, arguments='-sV')

    for host in nm.all_hosts():
        for proto in nm[host].all_protocols():
            port_info = nm[host][proto].items()
            for port, info in port_info:
                if info['state'] == 'open':
                    open_ports.append((port, info['name'], info['product'], info['version']))

    return open_ports

def scan_network(network_address):
    nm = nmap.PortScanner()
    nm.scan(hosts=network_address, arguments='-sn')

    hosts_list = [(x, nm[x]['status']['state']) for x in nm.all_hosts()]
    return hosts_list

def write_report(host, open_ports, hosts_list, filename):
    doc = Document()
    doc.add_heading('Penetration Test Report', 0)
    doc.add_heading(f'Port Scan Report for {host}', level=1)

    if open_ports:
        doc.add_paragraph('The following ports are open:')
        for port, name, product, version in open_ports:
            doc.add_paragraph(f'Port: {port}, Name: {name}, Product: {product}, Version: {version}')
    else:
        doc.add_paragraph('No open ports found.')

    if hosts_list:
        doc.add_heading('Network Scan Report', level=1)
        doc.add_paragraph('The following hosts are active in the network:')
        for host, status in hosts_list:
            doc.add_paragraph(f'Host: {host}, Status: {status}')
    else:
        doc.add_paragraph('No active hosts found in the network.')

    doc.save(filename)
    print(f"A report has been created: {filename}")

def main():
    host = input("Enter the IP address to scan: ")
    network_address = input("Enter the network address to scan (e.g., 192.168.1.0/24): ")
    
    target_port_range = (20, 3025)
    open_ports = scan_ports(host, target_port_range)
    hosts_list = scan_network(network_address)
    
    report_filename = 'penetration_test_report.docx'
    write_report(host, open_ports, hosts_list, report_filename)

if __name__ == "__main__":
    main()
